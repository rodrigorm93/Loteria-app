{"version":3,"sources":["MenuApp.js","Loteria.js","getLoteria.js","GeneratorLoteria.js","GetNumeros.js","getArrayAleatorio.js","routers/DashboardRoute.js","routers/AppRouter.js","LoteriaApp.js","index.js"],"names":["MenuApp","theme","mode","style","lineHeight","Item","key","icon","HomeOutlined","to","Loteria","numeros","total_num","tamaño","arrayLoteria","length","numRandom","Math","floor","random","rep","i","array1","push","array2","array3","getLoteria","Card","className","Table","responsive","borderless","map","index","GeneratorLoteria","Content","Layout","useState","numLoterias","setnumLoterias","num_loterias","Array","from","autoComplete","type","name","onChange","e","target","value","Button","onClick","variant","id","_","GetNumeros","number","setNumber","loteriaLista","setloteriaLista","reset","setReset","useEffect","array","lista","temporaryValue","randomIndex","currentIndex","getArrayAleatorio","console","log","Row","ListGroup","horizontal","Col","preventDefault","md","span","offset","width","height","Body","pos","indexOf","splice","DashboardRoute","Header","zIndex","exact","path","component","AppRouter","LoteriaApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c4f34bb3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Menu } from \"antd\";\r\n\r\nimport { HomeOutlined } from \"@ant-design/icons\";\r\n\r\nexport const MenuApp = () => {\r\n  return (\r\n    <Menu theme=\"dark\" mode=\"horizontal\" style={{ lineHeight: \"64px\" }}>\r\n      <Menu.Item key=\"1\" icon={<HomeOutlined />}>\r\n        <Link to=\"/\">Generar Loteria</Link>\r\n      </Menu.Item>\r\n\r\n      <Menu.Item key=\"2\" icon={<HomeOutlined />}>\r\n        <Link to=\"/numero\">Generar Números</Link>\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Table, Card } from \"react-bootstrap\";\r\n\r\nimport \"./Loteria.css\";\r\nimport { getLoteria } from \"./getLoteria\";\r\n\r\nexport const Loteria = ({ numeros }) => {\r\n  const { array1, array2, array3 } = getLoteria(100, 12);\r\n\r\n  //console.log(arrayLoteria);\r\n\r\n  return (\r\n    <Card className=\"card-loteria\">\r\n      <h1>Loteria</h1>\r\n\r\n      <Table responsive borderless={true}>\r\n        <thead></thead>\r\n        <tbody>\r\n          <tr>\r\n            {array1.map((i, index) => (\r\n              <td key={index}>\r\n                <div className=\"num_loteria\">{i}</div>\r\n              </td>\r\n            ))}\r\n          </tr>\r\n\r\n          <tr>\r\n            {array2.map((i, index) => (\r\n              <td key={index}>\r\n                <div className=\"num_loteria\">{i}</div>{\" \"}\r\n              </td>\r\n            ))}\r\n          </tr>\r\n          <tr>\r\n            {array3.map((i, index) => (\r\n              <td key={index}>\r\n                <div className=\"num_loteria\">{i}</div>\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        </tbody>\r\n      </Table>\r\n    </Card>\r\n  );\r\n};\r\n","export const getLoteria = (total_num, tamaño) => {\r\n  const arrayLoteria = [];\r\n\r\n  while (arrayLoteria.length < tamaño) {\r\n    let numRandom = Math.floor(Math.random() * (total_num - 1) + 1);\r\n    let rep = false;\r\n\r\n    for (let i = 0; i < arrayLoteria.length; i++) {\r\n      if (arrayLoteria[i] === numRandom) {\r\n        rep = true;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (!rep) {\r\n      arrayLoteria[arrayLoteria.length] = numRandom;\r\n    }\r\n  }\r\n\r\n  const array1 = [];\r\n  for (let i = 0; i < 4; i++) {\r\n    array1.push(arrayLoteria[i]);\r\n  }\r\n\r\n  const array2 = [];\r\n  for (let i = 4; i < 8; i++) {\r\n    array2.push(arrayLoteria[i]);\r\n  }\r\n\r\n  const array3 = [];\r\n  for (let i = 8; i < 12; i++) {\r\n    array3.push(arrayLoteria[i]);\r\n  }\r\n\r\n  return { arrayLoteria, array1, array2, array3 };\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Loteria } from \"./Loteria\";\r\nimport { Layout } from \"antd\";\r\n\r\nimport \"./Loteria.css\";\r\nexport const GeneratorLoteria = () => {\r\n  const { Content } = Layout;\r\n  const [numLoterias, setnumLoterias] = useState(0);\r\n  //const [numeros, setnumeros] = useState(100);\r\n\r\n  const num_loterias = Array.from({ length: numLoterias });\r\n\r\n  return (\r\n    <>\r\n      <div className=\"div-input\">\r\n        <p>Número de Cartones:</p>\r\n        <input\r\n          autoComplete=\"off\"\r\n          type=\"number\"\r\n          name=\"numLoterias\"\r\n          onChange={(e) => setnumLoterias(e.target.value)}\r\n          value={numLoterias}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"btn-pdf\">\r\n        <Button onClick={() => setnumLoterias(0)} variant=\"primary\">\r\n          Reset\r\n        </Button>\r\n        <Button onClick={() => setnumLoterias(3)} variant=\"success\">\r\n          Generar 3\r\n        </Button>\r\n      </div>\r\n\r\n      <Content id=\"print_to_pdf\">\r\n        {num_loterias.map((_, index) => (\r\n          <div key={index}>\r\n            <Loteria />\r\n\r\n            <br />\r\n          </div>\r\n        ))}\r\n      </Content>\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Layout } from \"antd\";\r\n\r\nimport { Button, Row, Col, ListGroup, Card, Image } from \"react-bootstrap\";\r\n\r\nimport \"./Number.css\";\r\nimport { getArrayAleatorio } from \"./getArrayAleatorio\";\r\n//const loteria = Array.from({ length: 10 }, (_, i) => i + 1);\r\n\r\nexport const GetNumeros = () => {\r\n  const { Content } = Layout;\r\n  const [number, setNumber] = useState(\"\");\r\n  const [loteriaLista, setloteriaLista] = useState([]);\r\n  const [reset, setReset] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const loteria = Array.from({ length: 100 }, (_, i) => i + 1);\r\n    const { array } = getArrayAleatorio(loteria);\r\n    console.log(\"effect\");\r\n    setloteriaLista(array);\r\n    setReset(false);\r\n    setNumber(\"\");\r\n  }, [reset]);\r\n\r\n  const handleNumber = () => {\r\n    setNumber(loteriaLista[0]);\r\n\r\n    let pos = loteriaLista.indexOf(loteriaLista[0]);\r\n    loteriaLista.splice(pos, 1);\r\n  };\r\n\r\n  const handleReset = (e) => {\r\n    e.preventDefault();\r\n    setReset(true);\r\n  };\r\n\r\n  console.log(loteriaLista);\r\n  return (\r\n    <div>\r\n      <h1>Números aleatorios</h1>\r\n      <Content>\r\n        <Row>\r\n          <ListGroup horizontal>\r\n            {loteriaLista.map((i, index) => (\r\n              <Col key={index}>\r\n                <ListGroup.Item>{i}</ListGroup.Item>\r\n              </Col>\r\n            ))}\r\n          </ListGroup>\r\n        </Row>\r\n        <Row>\r\n          <Col className=\"btn-number-reset\">\r\n            <Button variant=\"primary\" onClick={handleReset}>\r\n              Reset\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md={{ span: 4, offset: 3 }} className=\"col-number\">\r\n            <Card\r\n              style={{ width: \"35rem\", height: \"20rem\" }}\r\n              className=\"card-num\"\r\n            >\r\n              <Card.Body className=\"container-num\">\r\n                <div className=\"num_loteria2\">\r\n                  <h1 className=\"title-number\">{number}</h1>\r\n                </div>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md={{ span: 1, offset: 3 }} className=\"btn-number\">\r\n            <Button variant=\"success\" onClick={handleNumber}>\r\n              Siguiente\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Content>\r\n    </div>\r\n  );\r\n};\r\n","export const getArrayAleatorio = (lista) => {\r\n  let array = lista;\r\n  let currentIndex = array.length,\r\n    temporaryValue,\r\n    randomIndex;\r\n\r\n  // Mientras queden elementos a mezclar...\r\n  while (0 !== currentIndex) {\r\n    // Seleccionar un elemento sin mezclar...\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex -= 1;\r\n\r\n    // E intercambiarlo con el elemento actual\r\n    temporaryValue = array[currentIndex];\r\n    array[currentIndex] = array[randomIndex];\r\n    array[randomIndex] = temporaryValue;\r\n  }\r\n\r\n  return { array };\r\n};\r\n","import React from \"react\";\r\nimport { MenuApp } from \"../MenuApp\";\r\nimport { GeneratorLoteria } from \"../GeneratorLoteria\";\r\nimport { Layout } from \"antd\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { GetNumeros } from \"../GetNumeros\";\r\n\r\nexport const DashboardRoute = () => {\r\n  const { Header } = Layout;\r\n  return (\r\n    <>\r\n      <Header style={{ zIndex: 1 }}>\r\n        <MenuApp />\r\n      </Header>\r\n\r\n      <div>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={GeneratorLoteria} />\r\n          <Route exact path=\"/numero\" component={GetNumeros} />\r\n        </Switch>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { DashboardRoute } from \"./DashboardRoute\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nexport const AppRouter = () => {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n          <Route path=\"/\" component={DashboardRoute} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Layout } from \"antd\";\r\n\r\nimport \"./Loteria.css\";\r\nimport { AppRouter } from \"./routers/AppRouter\";\r\nexport const LoteriaApp = () => {\r\n  return (\r\n    <div>\r\n      <Layout className=\"contend-loteria\">\r\n        <AppRouter />\r\n      </Layout>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"antd/dist/antd.css\"; // or 'antd/dist/antd.less'\nimport { LoteriaApp } from \"./LoteriaApp\";\n\nReactDOM.render(\n  <LoteriaApp />,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}